apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger
  namespace: gomind-examples
  labels:
    app: jaeger
    component: tracing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      labels:
        app: jaeger
        component: tracing
    spec:
      containers:
      - name: jaeger
        image: jaegertracing/all-in-one:latest
        ports:
        - containerPort: 16686
          name: query-http
        - containerPort: 14268
          name: collector-http
        - containerPort: 14250
          name: collector-grpc
        - containerPort: 4317
          name: otlp-grpc
        - containerPort: 4318
          name: otlp-http
        env:
        - name: COLLECTOR_OTLP_ENABLED
          value: "true"
        - name: SPAN_STORAGE_TYPE
          value: "memory"
        - name: MEMORY_MAX_TRACES
          value: "50000"
        - name: QUERY_BASE_PATH
          value: "/"
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /
            port: 16686
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 16686
          initialDelaySeconds: 10
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-query
  namespace: gomind-examples
  labels:
    app: jaeger
    component: tracing
    service: query
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 16686
    name: query-http
  selector:
    app: jaeger
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-collector
  namespace: gomind-examples
  labels:
    app: jaeger
    component: tracing
    service: collector
spec:
  type: ClusterIP
  ports:
  - port: 14268
    targetPort: 14268
    name: collector-http
  - port: 14250
    targetPort: 14250
    name: collector-grpc
  - port: 4317
    targetPort: 4317
    name: otlp-grpc
  - port: 4318
    targetPort: 4318
    name: otlp-http
  selector:
    app: jaeger
---
# Ingress for Jaeger UI (Cloud Provider Specific - Choose One)
#
# NOTE: Ingress resources are commented out for cloud compatibility.
# Uncomment and modify based on your cloud provider:
#
# FOR KIND/NGINX INGRESS:
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: jaeger-ingress
#   namespace: gomind-examples
#   annotations:
#     nginx.ingress.kubernetes.io/rewrite-target: /
# spec:
#   ingressClassName: nginx
#   rules:
#   - host: jaeger.local
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: jaeger-query
#             port:
#               number: 80
#
# FOR EKS (AWS Load Balancer Controller):
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: jaeger-ingress
#   namespace: gomind-examples
#   annotations:
#     alb.ingress.kubernetes.io/scheme: internet-facing
#     alb.ingress.kubernetes.io/target-type: ip
# spec:
#   ingressClassName: alb
#   rules:
#   - host: jaeger.yourdomain.com
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: jaeger-query
#             port:
#               number: 80
#
# FOR GKE/AKS: Similar patterns as Grafana above