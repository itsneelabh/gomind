apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-config
  namespace: gomind-examples
  labels:
    app: otel-collector
    component: telemetry
data:
  config.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      # Receive Prometheus metrics for federation (optional)
      prometheus:
        config:
          scrape_configs:
          - job_name: 'otel-collector'
            scrape_interval: 5s
            static_configs:
            - targets: ['localhost:8888']

    processors:
      batch:
        timeout: 1s
        send_batch_size: 1024
        send_batch_max_size: 2048
      memory_limiter:
        limit_mib: 256

    exporters:
      # Export metrics in Prometheus format for scraping
      prometheus:
        endpoint: "0.0.0.0:8888"
        namespace: "gomind"
        const_labels:
          cluster: "gomind-examples"

      # Export traces to Jaeger
      otlp/jaeger:
        endpoint: http://jaeger-collector:4318
        tls:
          insecure: true


    extensions:
      health_check:
        endpoint: 0.0.0.0:13133

    service:
      extensions: [health_check]
      pipelines:
        traces:
          receivers: [otlp]
          processors: [memory_limiter, batch]
          exporters: [otlp/jaeger]

        metrics:
          receivers: [otlp]
          processors: [memory_limiter, batch]
          exporters: [prometheus]

      telemetry:
        logs:
          level: "info"
        metrics:
          level: detailed
          address: 0.0.0.0:8889
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-collector
  namespace: gomind-examples
  labels:
    app: otel-collector
    component: telemetry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: otel-collector
  template:
    metadata:
      labels:
        app: otel-collector
        component: telemetry
        gomind.framework/type: collector
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8888"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: otel-collector
        image: otel/opentelemetry-collector-contrib:latest
        ports:
        - containerPort: 4317
          name: otlp-grpc
          protocol: TCP
        - containerPort: 4318
          name: otlp-http
          protocol: TCP
        - containerPort: 8888
          name: prometheus
          protocol: TCP
        - containerPort: 8889
          name: internal-metrics
          protocol: TCP
        - containerPort: 13133
          name: health
          protocol: TCP
        env:
        - name: GOMIND_NAMESPACE
          value: "gomind-examples"
        args:
        - --config=/etc/otelcol-contrib/config.yaml
        volumeMounts:
        - name: config
          mountPath: /etc/otelcol-contrib
          readOnly: true
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 13133
          initialDelaySeconds: 30
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /
            port: 13133
          initialDelaySeconds: 10
          periodSeconds: 10
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: config
        configMap:
          name: otel-collector-config
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      securityContext:
        fsGroup: 1001
---
apiVersion: v1
kind: Service
metadata:
  name: otel-collector
  namespace: gomind-examples
  labels:
    app: otel-collector
    component: telemetry
spec:
  type: ClusterIP
  ports:
  - port: 4317
    targetPort: 4317
    protocol: TCP
    name: otlp-grpc
  - port: 4318
    targetPort: 4318
    protocol: TCP
    name: otlp-http
  - port: 8888
    targetPort: 8888
    protocol: TCP
    name: prometheus
  selector:
    app: otel-collector
---
# Service for internal collector metrics (optional monitoring)
apiVersion: v1
kind: Service
metadata:
  name: otel-collector-internal
  namespace: gomind-examples
  labels:
    app: otel-collector
    component: telemetry
    service: internal
spec:
  type: ClusterIP
  ports:
  - port: 8889
    targetPort: 8889
    protocol: TCP
    name: internal-metrics
  selector:
    app: otel-collector