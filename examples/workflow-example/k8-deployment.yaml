apiVersion: v1
kind: ConfigMap
metadata:
  name: workflow-engine-config
  namespace: gomind-examples
  labels:
    app.kubernetes.io/name: yaml-workflow-engine
    app.kubernetes.io/component: config
data:
  # Workflow Engine Configuration
  WORKFLOWS_DIR: "./workflows"
  MAX_PARALLEL_WORKFLOWS: "5"
  DEFAULT_WORKFLOW_TIMEOUT: "30m"
  ENABLE_AI_ENHANCEMENT: "true"
  
  # AI Configuration
  AI_PROVIDER: "openai"
  AI_MODEL: "gpt-4"
  AI_TEMPERATURE: "0.3"
  AI_MAX_TOKENS: "800"
  
  # Service Configuration
  PORT: "8080"
  GIN_MODE: "release"
  LOG_LEVEL: "info"
  
  # Metrics Configuration
  METRICS_ENABLED: "true"
  PROMETHEUS_PORT: "9090"
  
  # Service Discovery Configuration
  SERVICE_NAME: "yaml-workflow-engine"
  NAMESPACE: "gomind-examples"

  # Redis Configuration
  REDIS_URL: "redis://redis:6379"

  # Telemetry Configuration
  OTEL_EXPORTER_OTLP_ENDPOINT: "http://otel-collector:4318"
---
apiVersion: v1
kind: Secret
metadata:
  name: workflow-engine-secrets
  namespace: gomind-examples
  labels:
    app.kubernetes.io/name: yaml-workflow-engine
    app.kubernetes.io/component: secrets
type: Opaque
data:
  # Base64 encoded secrets - replace with actual values
  OPENAI_API_KEY: "your-base64-encoded-openai-api-key"
  # Example: echo -n "sk-your-key-here" | base64
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: workflow-templates
  namespace: gomind-examples
  labels:
    app.kubernetes.io/name: yaml-workflow-engine
    app.kubernetes.io/component: workflow-templates
data:
  # Example workflow template embedded in ConfigMap
  # This allows for easy workflow updates without rebuilding containers
  simple-test.yaml: |
    name: "simple-test"
    version: "1.0.0"
    description: "Simple test workflow for validation"
    author: "GoMind Framework Team"
    tags: ["test", "validation"]
    
    config:
      mode: "sequential"
      timeout: "5m"
      max_parallel: 1
      continue_on_error: false
      ai_enhanced: false
    
    parameters:
      test_name:
        type: "string"
        description: "Name of the test to run"
        required: true
        default: "basic-test"
    
    steps:
      - id: "start-test"
        name: "Start Test Execution"
        type: "agent"
        agent: "test-agent"
        instruction: "Start test execution for ${test_name}"
        input:
          test_type: "${test_name}"
        config:
          timeout: "2m"
          required: true
      
      - id: "validate-results"
        name: "Validate Test Results"
        type: "agent"
        agent: "validation-agent"
        instruction: "Validate the test results from ${test_name}"
        depends_on: ["start-test"]
        config:
          timeout: "1m"
          required: true
    
    on_success:
      - id: "notify-success"
        name: "Send Success Notification"
        type: "agent"
        agent: "notification-agent"
        instruction: "Test ${test_name} completed successfully"
    
    on_failure:
      - id: "notify-failure"
        name: "Send Failure Alert"
        type: "agent"
        agent: "notification-agent"
        instruction: "Test ${test_name} failed - please investigate"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: yaml-workflow-engine
  namespace: gomind-examples
  labels:
    app.kubernetes.io/name: yaml-workflow-engine
    app.kubernetes.io/component: workflow-engine
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/part-of: gomind-framework
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: yaml-workflow-engine
  template:
    metadata:
      labels:
        app.kubernetes.io/name: yaml-workflow-engine
        app.kubernetes.io/component: workflow-engine
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: workflow-engine-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      initContainers:
      # Init container to copy workflow templates from ConfigMap
      - name: copy-workflows
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - |
          echo "Copying workflow templates..."
          cp -r /workflow-templates/* /shared-workflows/ || echo "No templates to copy"
          ls -la /shared-workflows/
          echo "Template copy completed"
        volumeMounts:
        - name: workflow-templates
          mountPath: /workflow-templates
        - name: shared-workflows
          mountPath: /shared-workflows
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
      containers:
      - name: workflow-engine
        image: yaml-workflow-example:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        # Load configuration from ConfigMap
        - name: WORKFLOWS_DIR
          valueFrom:
            configMapKeyRef:
              name: workflow-engine-config
              key: WORKFLOWS_DIR
        - name: MAX_PARALLEL_WORKFLOWS
          valueFrom:
            configMapKeyRef:
              name: workflow-engine-config
              key: MAX_PARALLEL_WORKFLOWS
        - name: DEFAULT_WORKFLOW_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: workflow-engine-config
              key: DEFAULT_WORKFLOW_TIMEOUT
        - name: ENABLE_AI_ENHANCEMENT
          valueFrom:
            configMapKeyRef:
              name: workflow-engine-config
              key: ENABLE_AI_ENHANCEMENT
        - name: AI_PROVIDER
          valueFrom:
            configMapKeyRef:
              name: workflow-engine-config
              key: AI_PROVIDER
        - name: AI_MODEL
          valueFrom:
            configMapKeyRef:
              name: workflow-engine-config
              key: AI_MODEL
        - name: AI_TEMPERATURE
          valueFrom:
            configMapKeyRef:
              name: workflow-engine-config
              key: AI_TEMPERATURE
        - name: AI_MAX_TOKENS
          valueFrom:
            configMapKeyRef:
              name: workflow-engine-config
              key: AI_MAX_TOKENS
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: workflow-engine-config
              key: PORT
        - name: GIN_MODE
          valueFrom:
            configMapKeyRef:
              name: workflow-engine-config
              key: GIN_MODE
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: workflow-engine-config
              key: LOG_LEVEL
        - name: METRICS_ENABLED
          valueFrom:
            configMapKeyRef:
              name: workflow-engine-config
              key: METRICS_ENABLED
        - name: PROMETHEUS_PORT
          valueFrom:
            configMapKeyRef:
              name: workflow-engine-config
              key: PROMETHEUS_PORT
        - name: SERVICE_NAME
          valueFrom:
            configMapKeyRef:
              name: workflow-engine-config
              key: SERVICE_NAME
        - name: NAMESPACE
          valueFrom:
            configMapKeyRef:
              name: workflow-engine-config
              key: NAMESPACE
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: workflow-engine-config
              key: REDIS_URL
        # Load secrets
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: ai-provider-keys
              key: OPENAI_API_KEY
        # Pod metadata for service discovery
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: shared-workflows
          mountPath: /app/workflows
        - name: workflow-cache
          mountPath: /app/cache
      volumes:
      - name: tmp
        emptyDir: {}
      - name: workflow-templates
        configMap:
          name: workflow-templates
      - name: shared-workflows
        emptyDir: {}
      - name: workflow-cache
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - yaml-workflow-engine
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "gomind.ai/workflow"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
---
apiVersion: v1
kind: Service
metadata:
  name: workflow-engine-service
  namespace: gomind-examples
  labels:
    app.kubernetes.io/name: yaml-workflow-engine
    app.kubernetes.io/component: service
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP
  selector:
    app.kubernetes.io/name: yaml-workflow-engine
---
apiVersion: v1
kind: Service
metadata:
  name: workflow-engine-headless
  namespace: gomind-examples
  labels:
    app.kubernetes.io/name: yaml-workflow-engine
    app.kubernetes.io/component: headless-service
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  selector:
    app.kubernetes.io/name: yaml-workflow-engine
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: workflow-engine-service-account
  namespace: gomind-examples
  labels:
    app.kubernetes.io/name: yaml-workflow-engine
    app.kubernetes.io/component: service-account
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: workflow-engine-role
  namespace: gomind-examples
  labels:
    app.kubernetes.io/name: yaml-workflow-engine
    app.kubernetes.io/component: role
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: workflow-engine-role-binding
  namespace: gomind-examples
  labels:
    app.kubernetes.io/name: yaml-workflow-engine
    app.kubernetes.io/component: role-binding
subjects:
- kind: ServiceAccount
  name: workflow-engine-service-account
  namespace: gomind-examples
roleRef:
  kind: Role
  name: workflow-engine-role
  apiGroup: rbac.authorization.k8s.io
# Ingress for Workflow Engine (Cloud Provider Specific)
#
# NOTE: Ingress resources are commented out for cloud compatibility.
# Each cloud provider uses different ingress controllers and annotations.
#
# See k8-deployment/grafana.yaml for complete cloud-specific examples.
# Uncomment and modify the appropriate configuration for your environment.
#
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: workflow-engine-ingress
#   namespace: gomind-examples
#   labels:
#     app.kubernetes.io/name: yaml-workflow-engine
#     app.kubernetes.io/component: ingress
#   annotations:
#     nginx.ingress.kubernetes.io/rewrite-target: /
#     nginx.ingress.kubernetes.io/ssl-redirect: "true"
#     nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
#     nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
#     nginx.ingress.kubernetes.io/rate-limit: "50"
#     nginx.ingress.kubernetes.io/rate-limit-window: "1m"
#     nginx.ingress.kubernetes.io/proxy-body-size: "10m"
# spec:
#   ingressClassName: nginx
#   tls:
#   - hosts:
#     - workflows.gomind.local
#     secretName: workflow-engine-tls
#   rules:
#   - host: workflows.gomind.local
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: workflow-engine-service
#             port:
#               number: 80
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: workflow-engine-pdb
  namespace: gomind-examples
  labels:
    app.kubernetes.io/name: yaml-workflow-engine
    app.kubernetes.io/component: pod-disruption-budget
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: yaml-workflow-engine
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: workflow-engine-hpa
  namespace: gomind-examples
  labels:
    app.kubernetes.io/name: yaml-workflow-engine
    app.kubernetes.io/component: autoscaler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: yaml-workflow-engine
  minReplicas: 2
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Max