apiVersion: apps/v1
kind: Deployment
metadata:
  name: weather-tool
  namespace: gomind-examples
  labels:
    app: weather-tool
    component: tool
    version: v1.0.0
    gomind.framework/type: tool
spec:
  replicas: 2
  selector:
    matchLabels:
      app: weather-tool
  template:
    metadata:
      labels:
        app: weather-tool
        component: tool
        version: v1.0.0
        gomind.framework/type: tool
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: weather-tool
        image: weather-tool-example:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: GOMIND_AGENT_NAME
          value: "weather-service"
        - name: GOMIND_PORT
          value: "8080"
        - name: GOMIND_NAMESPACE
          value: "gomind-examples"
        - name: REDIS_URL
          value: "redis://redis:6379"
        - name: GOMIND_REDIS_URL
          value: "redis://redis:6379"
        - name: GOMIND_DEV_MODE
          value: "false"
        # Telemetry Configuration
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: "http://otel-collector:4318"
        - name: WEATHER_API_KEY
          valueFrom:
            secretKeyRef:
              name: external-api-keys
              key: WEATHER_API_KEY
              optional: true
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/capabilities
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      securityContext:
        fsGroup: 1001
---
apiVersion: v1
kind: Service
metadata:
  name: weather-tool-service
  namespace: gomind-examples
  labels:
    app: weather-tool
    component: tool
    gomind.framework/type: tool
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: weather-tool
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: weather-tool-config
  namespace: gomind-examples
  labels:
    app: weather-tool
    component: tool
data:
  config.yaml: |
    service:
      name: weather-service
      port: 8080
      namespace: gomind-examples
    discovery:
      enabled: true
      provider: redis
      redis_url: redis://redis:6379
    logging:
      level: info
      format: json
    cors:
      enabled: true
      origins: ["*"]